/**
 * 8 way Multiplexor.
 * out = in[0] if sel == 000
 *       in[1] if sel == 001
 *       in[2] if sel == 010
 *       in[3] if sel == 011
 *       in[4] if sel == 100
 *       in[5] if sel == 101
 *       in[6] if sel == 110
 *       in[7] if sel == 111
 */

CHIP Mux8Way {
    IN  in[8], sel[3];
    OUT out;

    PARTS:
    //Not Gate No.1
    Not(in=sel[0], out=NotSel0);
    //Not Gate No.2
    Not(in=sel[1], out=NotSel1);
    //Not Gate No.3
    Not(in=sel[2], out=NotSel2);

    //And Gate No.1
    And(a=NotSel0, b=NotSel1, out=And1P1);
    And(a=And1P1, b=NotSel2, out=And1P2);
    And(a=And1P2, b=in[0], out=R1);

    //And Gate No.2
    And(a=sel[0], b=NotSel1, out=And2P1);
    And(a=And2P1, b=NotSel2, out=And2P2);
    And(a=And2P2, b=in[1], out=R2);

    //And Gate No.3
    And(a=NotSel0, b=sel[1], out=And3P1);
    And(a=And3P1, b=NotSel2, out=And3P2);
    And(a=And3P2, b=in[2], out=R3);

    //And Gate No.4
    And(a=sel[0], b=sel[1], out=And4P1);
    And(a=And4P1, b=NotSel2, out=And4P2);
    And(a=And4P2, b=in[3], out=R4);

    //And Gate No.5
    And(a=NotSel0, b=NotSel1, out=And5P1);
    And(a=And5P1, b=sel[2], out=And5P2);
    And(a=And5P2, b=in[4], out=R5);

    //And Gate No.6
    And(a=sel[0], b=NotSel1, out=And6P1);
    And(a=And6P1, b=sel[2], out=And6P2);
    And(a=And6P2, b=in[5], out=R6);

    //And Gate No.7
    And(a=NotSel0, b=sel[1], out=And7P1);
    And(a=And7P1, b=sel[2], out=And7P2);
    And(a=And7P2, b=in[6], out=R7);

    //And Gate No.8
    And(a=sel[0], b=sel[1], out=And8P1);
    And(a=And8P1, b=sel[2], out=And8P2);
    And(a=And8P2, b=in[7], out=R8);

    //Or Gate No.1
    Or(a=R1, b=R2, out=OrP1);
    Or(a=OrP1, b=R3, out=OrP2);
    Or(a=OrP2, b=R4, out=OrP3);
    Or(a=OrP3, b=R5, out=OrP4);
    Or(a=OrP4, b=R6, out=OrP5);
    Or(a=OrP5, b=R7, out=OrP6);
    Or(a=OrP6, b=R8, out=out);

    //Sum: 1 Or Gate, 8 And Gates, 3 Not Gates.
}
